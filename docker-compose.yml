
version: '3'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    volumes:
      - ./rabbitmq/rabbitmq.confg:/etc/rabbitmq/rabbitmq.config:ro
     # - rabbitmq-logs:/var/log/rabbitmq/
     # - rabbitmq-data:/var/lib/rabbitmq/
    ports:
        - 15672:15672
    networks:
        - app-network
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  mongo:
    container_name: mongo
    image: mongo
    #environment:
     # - MONGO_INITDB_ROOT_USERNAME=mongoadmin 
      #- MONGO_INITDB_ROOT_PASSWORD=secret 
    networks:
      - app-network


  mongo-express: 
    container_name: mongo-express
    image: mongo-express
    ports:
      - 8081:8081
  #  environment:
   #   - MONGO_INITDB_ROOT_USERNAME=mongoadmin 
    #  - MONGO_INITDB_ROOT_PASSWORD=secret 
    networks:
      - app-network

  web-service:
    container_name: web-service
    build:
      context: ./NomiCoseCitta
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
     - RABBIT_HOST=rabbitmq
     - MONGODB=mongoDb
    depends_on:
      - rabbitmq
    networks:
      - app-network


  game-manager:
    container_name: game-manager
    build:
      context: ./GameManagerService
      dockerfile: Dockerfile 
    environment:
      - RABBIT_HOST=rabbitmq
      - MONGODB=mongoDb
    depends_on:
      - rabbitmq
    networks:
      - app-network

  round-manager:
    container_name: round-manager
    build:
      context: ./RoundManagerService
      dockerfile: Dockerfile
    environment:
      - RABBIT_HOST=rabbitmq
      - MONGODB=mongoDb
    depends_on:
      - rabbitmq
    networks:
      - app-network

networks:
    app-network:
      driver: bridge