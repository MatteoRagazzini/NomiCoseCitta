
version: '3'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    volumes:
      - ./rabbitmq/rabbitmq.confg:/etc/rabbitmq/rabbitmq.config:ro
     # - rabbitmq-logs:/var/log/rabbitmq/
     # - rabbitmq-data:/var/lib/rabbitmq/
    ports:
        - 15672:15672
   # networks:
    #    - app-network
   # healthcheck:
    #    test: ["CMD", "curl", "-f", "http://localhost:15672"]
     #   interval: 30s
     #   timeout: 10s
     #   retries: 5

  mongo-game:
    container_name: mongo-game
    image: mongo
    #environment:
     # - MONGO_INITDB_ROOT_USERNAME=mongoadmin 
      #- MONGO_INITDB_ROOT_PASSWORD=secret 
   # networks:
    #  - app-network

  mongo-round:
    container_name: mongo-round
    image: mongo
    #environment:
     # - MONGO_INITDB_ROOT_USERNAME=mongoadmin 
      #- MONGO_INITDB_ROOT_PASSWORD=secret 
    #networks:
     # - app-network


  mongo-express-game: 
    container_name: mongo-express-game
    image: mongo-express
    ports:
      - 8081:8081
    environment:
   #   - MONGO_INITDB_ROOT_USERNAME=mongoadmin 
    #  - MONGO_INITDB_ROOT_PASSWORD=secret 
       - ME_CONFIG_MONGODB_SERVER=mongo-game
   # networks:
    #  - app-network

  mongo-express-round: 
    container_name: mongo-express-round
    image: mongo-express
    ports:
      - 8082:8081
    environment:
   #   - MONGO_INITDB_ROOT_USERNAME=mongoadmin 
    #  - MONGO_INITDB_ROOT_PASSWORD=secret 
       - ME_CONFIG_MONGODB_SERVER=mongo-round
    #networks:
     # - app-network

  web-service:
    container_name: web-service
    build:
      context: ./NomiCoseCitta
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
     - RABBIT_HOST=rabbitmq
    depends_on:
      - rabbitmq
  #  networks:
   #   - app-network


  game-manager:
    container_name: game-manager
    build:
      context: ./GameManagerService
      dockerfile: Dockerfile 
    environment:
      - RABBIT_HOST=rabbitmq
      - MONGODB=mongodb://mongo-game
    depends_on:
      - rabbitmq
      - mongo
  #  networks:
   #   - app-network

  round-manager:
    container_name: round-manager
    build:
      context: ./RoundManagerService
      dockerfile: Dockerfile
    environment:
      - RABBIT_HOST=rabbitmq
      - MONGODB=mongodb://mongo-round
    depends_on:
      - rabbitmq
      - mongo
 #   networks:
 #     - app-network

#networks:
 # default:
  #  driver: overlay